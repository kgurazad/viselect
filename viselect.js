// Generated by CoffeeScript 2.3.1
(function() {
  var ViSelect;

  ViSelect = class ViSelect {
    constructor(name, values) {
      this.name = name;
      this.values = values;
      this.setFocusListeners();
      this.setClickListeners();
      this.setKeyListeners();
      return;
    }

    setFocusListeners() {
      var self;
      self = this;
      $('#' + this.name).on('focusin', function() {
        this.name = self.name;
        $('#under-' + this.name).show();
      });
      $('#' + this.name).on('focusout', function() {
        if ($('#around-' + this.name).find(':hover').length === 0) {
          return;
        }
      });
    }

    // $('#under-' + @name).hide()
    setClickListeners() {
      var self;
      self = this;
      $('body').on('click', '#under-' + this.name + ' li', function() {
        var i, ins, str;
        this.name = self.name;
        if ($(this).attr('id') === 'hide-' + this.name) {
          $('#' + this.name).val($('#' + this.name).val().slice(0, -1));
          $('#hide-' + this.name).remove();
          $('#under-' + this.name).hide();
          return;
        }
        ins = $('#' + this.name).val().trim().split(/,\s*/);
        ins[ins.length - 1] = $(this).html();
        str = '';
        for (i in ins) {
          str += ins[i] + ',';
        }
        $('#' + this.name).val(str);
        if ($('#hide-' + this.name).length === 0) {
          $('#under-' + this.name).append('<li id="hide-' + this.name + '" class="under-' + this.name + '-item list-group-item disabled">Hide</li>');
          return;
        }
      });
    }

    setKeyListeners() {
      var self;
      self = this;
      $('#' + this.name).on('keyup', function() {
        var i, ins, newActive, num, s, str, val, word;
        this.name = self.name;
        this.values = self.values;
        if (event.which === 13) {
          ins = $(this).val().trim().split(/,\s*/);
          ins[ins.length - 1] = $('.under-' + this.name + '-item.active').html();
          str = '';
          for (i in ins) {
            str += ins[i] + ',';
          }
          $('#' + this.name).val(str);
          return;
        }
        if (event.which === 186) {
          $(this).val($(this).val().slice(0, -2));
          return;
        }
        if (event.which === 38) {
          event.preventDefault();
          newActive = $('#under-' + this.name + ' li.active').index();
          if (newActive === 0) {
            newActive = $('#under-' + this.name + ' li').length;
          }
          $('#under-' + this.name + ' li.active').removeClass('active');
          $('#under-' + this.name + ' li:nth-child(' + newActive + ')').addClass('active');
          return;
        }
        if (event.which === 40) {
          event.preventDefault();
          s = $('#under-' + this.name + ' li').length;
          newActive = ($('#under-' + this.name + ' li.active').index() + 2) % s;
          if (newActive === 0) {
            newActive = s;
          }
          $('#under-' + this.name + ' li.active').removeClass('active');
          $('#under-' + this.name + ' li:nth-child(' + newActive + ')').addClass('active');
          return;
        }
        $('#under-' + this.name).empty();
        val = $(this).val().toLowerCase().trim().split(/,\s*/).slice(-1)[0];
        num = 0;
        for (i in this.values) {
          word = words[i];
          if (word.toLowerCase().startsWith(val)) {
            num++;
            if (num === 1) {
              $('#under-' + this.name).append('<li class="under-' + this.name + '-item list-group-item active">' + word + '</li>');
            } else {
              $('#under-' + this.name).append('<li class="under-' + this.name + '-item list-group-item">' + word + '</li>');
            }
            if (num === 6) {
              break;
            }
          }
        }
        if (num === 0) {
          $('#under-' + this.name).append('<li class="under-' + this.name + '-item list-group-item">No results found.</li>');
          return;
        }
      });
    }

  };

  

}).call(this);
